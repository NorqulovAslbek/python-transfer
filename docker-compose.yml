#version: "3"
#
#services:
#  redis:
#    container_name: redis
#    image: redis:latest
#    networks:
#      - task2_network
#
#    volumes:
#      - redis_data:/data
#    ports:
#      - "6379:6379"
#
#  src:
#    build:
#      context: .
#    image: task2
#    container_name: task2_container
#    command: python manage.py runserver 0.0.0.8000
#    ports:
#      - "8000:8000"
#    volumes:
#      - .:/var/www/app
#    networks:
#      - task2_network
#
#
#  src_celery:
#    container_name: src_celery
#    build: .
#    command: celery -A src worker --loglevel=info
#    volumes:
#      - .:/app
#    environment:
#      - CELERY_BROKER_URL=redis://src_redis:6379/0
#      - CELERY_RESULT_BACKEND=django-db
#    depends_on:
#      - src
#      - redis
#    networks:
#      - task2_network
#
#  src_beat:
#    container_name: src_beat
#    build:
#      context: .
#    command: celery -A src beat --loglevel=info
#    depends_on:
#      - src
#      - src_celery
#      - redis
#    networks:
#      - task2_network
#
#networks:
#  task2_network:
#volumes:
#  redis_data:
#    driver: local

version: "3"

services:
  redis:
    container_name: redis
    image: redis:latest
    networks:
      - task2_network
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  src:
    build:
      context: .
    image: task2
    container_name: task2_container
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/app
    networks:
      - task2_network

  src_celery:
    container_name: src_celery
    build: .
    command: celery -A src worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    depends_on:
      - src
      - redis
    networks:
      - task2_network

  src_beat:
    container_name: src_beat
    build:
      context: .
    command: celery -A src beat --loglevel=info
    depends_on:
      - src
      - src_celery
      - redis
    networks:
      - task2_network

networks:
  task2_network:

volumes:
  redis_data:
    driver: local

